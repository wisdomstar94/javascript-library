(()=>{var V=Object.create;var F=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var M=Object.getPrototypeOf,Q=Object.prototype.hasOwnProperty;var g=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports);var H=(r,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of L(e))!Q.call(r,a)&&a!==t&&F(r,a,{get:()=>e[a],enumerable:!(n=B(e,a))||n.enumerable});return r};var P=(r,e,t)=>(t=r!=null?V(M(r)):{},H(e||!r||!r.__esModule?F(t,"default",{value:r,enumerable:!0}):t,r));var h=g((v,y)=>{"use strict";y.exports=r=>encodeURIComponent(r).replace(/[!'()*]/g,e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`)});var j=g((rr,O)=>{"use strict";var S="%[a-f0-9]{2}",x=new RegExp(S,"gi"),b=new RegExp("("+S+")+","gi");function o(r,e){try{return decodeURIComponent(r.join(""))}catch(a){}if(r.length===1)return r;e=e||1;var t=r.slice(0,e),n=r.slice(e);return Array.prototype.concat.call([],o(t),o(n))}function _(r){try{return decodeURIComponent(r)}catch(n){for(var e=r.match(x),t=1;t<e.length;t++)r=o(e,t).join(""),e=r.match(x);return r}}function z(r){for(var e={"%FE%FF":"\uFFFD\uFFFD","%FF%FE":"\uFFFD\uFFFD"},t=b.exec(r);t;){try{e[t[0]]=decodeURIComponent(t[0])}catch(i){var n=_(t[0]);n!==t[0]&&(e[t[0]]=n)}t=b.exec(r)}e["%C2"]="\uFFFD";for(var a=Object.keys(e),f=0;f<a.length;f++){var c=a[f];r=r.replace(new RegExp(c,"g"),e[c])}return r}O.exports=function(r){if(typeof r!="string")throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof r+"`");try{return r=r.replace(/\+/g," "),decodeURIComponent(r)}catch(e){return z(r)}}});var p=g((er,A)=>{"use strict";A.exports=(r,e)=>{if(!(typeof r=="string"&&typeof e=="string"))throw new TypeError("Expected the arguments to be of type `string`");if(e==="")return[r];let t=r.indexOf(e);return t===-1?[r]:[r.slice(0,t),r.slice(t+e.length)]}});var w=g((tr,E)=>{"use strict";E.exports=function(r,e){for(var t={},n=Object.keys(r),a=Array.isArray(e),f=0;f<n.length;f++){var c=n[f],i=r[c];(a?e.indexOf(c)!==-1:e(c,i,r))&&(t[c]=i)}return t}});var R=g(d=>{"use strict";var G=h(),J=j(),N=p(),K=w(),W=r=>r==null,l=Symbol("encodeFragmentIdentifier");function X(r){switch(r.arrayFormat){case"index":return e=>(t,n)=>{let a=t.length;return n===void 0||r.skipNull&&n===null||r.skipEmptyString&&n===""?t:n===null?[...t,[s(e,r),"[",a,"]"].join("")]:[...t,[s(e,r),"[",s(a,r),"]=",s(n,r)].join("")]};case"bracket":return e=>(t,n)=>n===void 0||r.skipNull&&n===null||r.skipEmptyString&&n===""?t:n===null?[...t,[s(e,r),"[]"].join("")]:[...t,[s(e,r),"[]=",s(n,r)].join("")];case"colon-list-separator":return e=>(t,n)=>n===void 0||r.skipNull&&n===null||r.skipEmptyString&&n===""?t:n===null?[...t,[s(e,r),":list="].join("")]:[...t,[s(e,r),":list=",s(n,r)].join("")];case"comma":case"separator":case"bracket-separator":{let e=r.arrayFormat==="bracket-separator"?"[]=":"=";return t=>(n,a)=>a===void 0||r.skipNull&&a===null||r.skipEmptyString&&a===""?n:(a=a===null?"":a,n.length===0?[[s(t,r),e,s(a,r)].join("")]:[[n,s(a,r)].join(r.arrayFormatSeparator)])}default:return e=>(t,n)=>n===void 0||r.skipNull&&n===null||r.skipEmptyString&&n===""?t:n===null?[...t,s(e,r)]:[...t,[s(e,r),"=",s(n,r)].join("")]}}function Y(r){let e;switch(r.arrayFormat){case"index":return(t,n,a)=>{if(e=/\[(\d*)\]$/.exec(t),t=t.replace(/\[\d*\]$/,""),!e){a[t]=n;return}a[t]===void 0&&(a[t]={}),a[t][e[1]]=n};case"bracket":return(t,n,a)=>{if(e=/(\[\])$/.exec(t),t=t.replace(/\[\]$/,""),!e){a[t]=n;return}if(a[t]===void 0){a[t]=[n];return}a[t]=[].concat(a[t],n)};case"colon-list-separator":return(t,n,a)=>{if(e=/(:list)$/.exec(t),t=t.replace(/:list$/,""),!e){a[t]=n;return}if(a[t]===void 0){a[t]=[n];return}a[t]=[].concat(a[t],n)};case"comma":case"separator":return(t,n,a)=>{let f=typeof n=="string"&&n.includes(r.arrayFormatSeparator),c=typeof n=="string"&&!f&&u(n,r).includes(r.arrayFormatSeparator);n=c?u(n,r):n;let i=f||c?n.split(r.arrayFormatSeparator).map(T=>u(T,r)):n===null?n:u(n,r);a[t]=i};case"bracket-separator":return(t,n,a)=>{let f=/(\[\])$/.test(t);if(t=t.replace(/\[\]$/,""),!f){a[t]=n&&u(n,r);return}let c=n===null?[]:n.split(r.arrayFormatSeparator).map(i=>u(i,r));if(a[t]===void 0){a[t]=c;return}a[t]=[].concat(a[t],c)};default:return(t,n,a)=>{if(a[t]===void 0){a[t]=n;return}a[t]=[].concat(a[t],n)}}}function U(r){if(typeof r!="string"||r.length!==1)throw new TypeError("arrayFormatSeparator must be single character string")}function s(r,e){return e.encode?e.strict?G(r):encodeURIComponent(r):r}function u(r,e){return e.decode?J(r):r}function $(r){return Array.isArray(r)?r.sort():typeof r=="object"?$(Object.keys(r)).sort((e,t)=>Number(e)-Number(t)).map(e=>r[e]):r}function I(r){let e=r.indexOf("#");return e!==-1&&(r=r.slice(0,e)),r}function Z(r){let e="",t=r.indexOf("#");return t!==-1&&(e=r.slice(t)),e}function q(r){r=I(r);let e=r.indexOf("?");return e===-1?"":r.slice(e+1)}function C(r,e){return e.parseNumbers&&!Number.isNaN(Number(r))&&typeof r=="string"&&r.trim()!==""?r=Number(r):e.parseBooleans&&r!==null&&(r.toLowerCase()==="true"||r.toLowerCase()==="false")&&(r=r.toLowerCase()==="true"),r}function D(r,e){e=Object.assign({decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1},e),U(e.arrayFormatSeparator);let t=Y(e),n=Object.create(null);if(typeof r!="string"||(r=r.trim().replace(/^[?#&]/,""),!r))return n;for(let a of r.split("&")){if(a==="")continue;let[f,c]=N(e.decode?a.replace(/\+/g," "):a,"=");c=c===void 0?null:["comma","separator","bracket-separator"].includes(e.arrayFormat)?c:u(c,e),t(u(f,e),c,n)}for(let a of Object.keys(n)){let f=n[a];if(typeof f=="object"&&f!==null)for(let c of Object.keys(f))f[c]=C(f[c],e);else n[a]=C(f,e)}return e.sort===!1?n:(e.sort===!0?Object.keys(n).sort():Object.keys(n).sort(e.sort)).reduce((a,f)=>{let c=n[f];return Boolean(c)&&typeof c=="object"&&!Array.isArray(c)?a[f]=$(c):a[f]=c,a},Object.create(null))}d.extract=q;d.parse=D;d.stringify=(r,e)=>{if(!r)return"";e=Object.assign({encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:","},e),U(e.arrayFormatSeparator);let t=c=>e.skipNull&&W(r[c])||e.skipEmptyString&&r[c]==="",n=X(e),a={};for(let c of Object.keys(r))t(c)||(a[c]=r[c]);let f=Object.keys(a);return e.sort!==!1&&f.sort(e.sort),f.map(c=>{let i=r[c];return i===void 0?"":i===null?s(c,e):Array.isArray(i)?i.length===0&&e.arrayFormat==="bracket-separator"?s(c,e)+"[]":i.reduce(n(c),[]).join("&"):s(c,e)+"="+s(i,e)}).filter(c=>c.length>0).join("&")};d.parseUrl=(r,e)=>{e=Object.assign({decode:!0},e);let[t,n]=N(r,"#");return Object.assign({url:t.split("?")[0]||"",query:D(q(r),e)},e&&e.parseFragmentIdentifier&&n?{fragmentIdentifier:u(n,e)}:{})};d.stringifyUrl=(r,e)=>{e=Object.assign({encode:!0,strict:!0,[l]:!0},e);let t=I(r.url).split("?")[0]||"",n=d.extract(r.url),a=d.parse(n,{sort:!1}),f=Object.assign(a,r.query),c=d.stringify(f,e);c&&(c=`?${c}`);let i=Z(r.url);return r.fragmentIdentifier&&(i=`#${e[l]?s(r.fragmentIdentifier,e):r.fragmentIdentifier}`),`${t}${c}${i}`};d.pick=(r,e,t)=>{t=Object.assign({parseFragmentIdentifier:!0,[l]:!1},t);let{url:n,query:a,fragmentIdentifier:f}=d.parseUrl(r,t);return d.stringifyUrl({url:n,query:K(a,e),fragmentIdentifier:f},t)};d.exclude=(r,e,t)=>{let n=Array.isArray(e)?a=>!e.includes(a):(a,f)=>!e(a,f);return d.pick(r,n,t)}});var m=P(R()),ar=()=>m.default.parse(location.search),cr=r=>m.default.stringify(r);})();
//# sourceMappingURL=data:application/json;base64,
